{"version":3,"sources":["firebase.js","components/Auth.js","components/PrivateRoute.js","utils/constants.js","components/Navigation.js","components/Layout.js","components/MyRequestCard.js","components/MyRequestedRides.js","components/RequestCard.js","components/MyOfferedRides.js","pages/Home.js","pages/Signup.js","pages/Login.js","components/TextFormField.js","components/TextAreaFormField.js","components/NewRideForm.js","pages/NewRide.js","components/OfferRideForm.js","components/RideRequestList.js","pages/OfferRide.js","App.js","serviceWorker.js","index.js"],"names":["firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","AuthContext","React","createContext","AuthProvider","children","useState","currentUser","setCurrentUser","useEffect","auth","onAuthStateChanged","Provider","value","signOut","PrivateRoute","RouteComponent","component","rest","useContext","render","routeProps","to","COLORS","withRouter","history","Box","px","py","Flex","align","justify","direction","w","maxW","mx","Heading","as","size","display","mb","Button","Link","variant","variantColor","mr","onClick","then","push","Layout","minH","h","overflowX","flex","bg","borderTopStyle","borderTopWidth","borderTopColor","MyRequestCard","props","border","borderColor","borderRadius","ml","Text","p","fontWeight","isTruncated","fromStreet","fromCity","fromState","fromZipCode","toFacility","toStreet","toCity","toState","toZipCode","alignItems","flexDirection","justifyContent","alignContent","type","fromZip","console","log","window","open","focus","m","flex-grow","requestID","MyRequestedRides","requestList","length","map","request","pickupInfo","fromFacility","dropOffInfo","firstName","user","lastName","date","key","RequestCard","firestore","collection","doc","update","offers","FieldValue","arrayUnion","uid","catch","error","addOffer","MyOfferedRides","offeredList","Home","myRequestList","setMyRequestList","myOfferedList","where","get","response","tempRequestList","userIds","forEach","i","data","userId","requestingUser","id","userArray","s","fetchUsers","tempRequest","find","justifyItems","SignUp","email","setEmail","password","setPassword","setFirstName","setLastName","phoneNumber","setPhoneNumber","isDriver","setIsDriver","licenseNumber","setLicenseNumber","licensePlate","setLicensePlate","make","setMake","model","setModel","handicapAccessible","setHandicapAccessible","handleSignUp","useCallback","event","a","preventDefault","target","elements","createUserWithEmailAndPassword","newUser","set","driverVerified","alert","message","onSubmit","FormControl","isRequired","FormLabel","htmlFor","fontSize","Input","placeholder","onChange","e","Checkbox","mt","RRLink","d","Login","handleLogin","signInWithEmailAndPassword","name","TextFormField","field","form","label","errorText","getIn","touched","errors","isrequired","isInvalid","my","FormErrorMessage","TextAreaFormField","Textarea","schema","yup","required","min","notes","NewRide","onCreateRide","initialValues","validationSchema","values","setSubmitting","Form","borderBottomWidth","NewRideForm","add","Date","OfferRide","onOfferRide","RideRequestList","setRequestList","OfferRideForm","querySnapshot","App","ThemeProvider","theme","CSSReset","basename","process","exact","path","Signup","Boolean","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.78099320.chunk.js","sourcesContent":["import * as firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\n\r\nfirebase.initializeApp({\r\n  apiKey: \"AIzaSyDP6RT5oPQTkpNHbobqiMieSCIAUAUz38U\",\r\n  authDomain: \"ride-share-541ea.firebaseapp.com\",\r\n  databaseURL: \"https://ride-share-541ea.firebaseio.com\",\r\n  projectId: \"ride-share-541ea\",\r\n  storageBucket: \"ride-share-541ea.appspot.com\",\r\n  messagingSenderId: \"738063607449\",\r\n  appId: \"1:738063607449:web:e77598e2c5544e96917a08\",\r\n  measurementId: \"G-S4EE8KQC70\"\r\n});\r\n\r\nexport default firebase;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport firebase from \"firebase/app\";\r\n\r\nexport const AuthContext = React.createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n\r\n  useEffect(() => {\r\n    firebase.auth().onAuthStateChanged(setCurrentUser);\r\n  }, []);\r\n\r\n  function signOut() {\r\n    return firebase.auth().signOut();\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        currentUser,\r\n        signOut\r\n      }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { AuthContext } from \"./Auth\";\r\n\r\nconst PrivateRoute = ({ component: RouteComponent, ...rest }) => {\r\n  const { currentUser } = useContext(AuthContext);\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={routeProps =>\r\n        !!currentUser ? (\r\n          <RouteComponent {...routeProps} />\r\n        ) : (\r\n          <Redirect to={\"/login\"} />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default PrivateRoute;\r\n","export const COLORS = {\r\n  primary: \"blue\"\r\n};\r\n\r\nexport const MAX_WIDTH = 800;\r\n","import React from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { AuthContext } from \"./Auth\";\r\nimport { Box, Flex, Button, Heading } from \"@chakra-ui/core\";\r\nimport { COLORS, MAX_WIDTH } from \"../utils/constants\";\r\n\r\nfunction Navigation({ history }) {\r\n  const { signOut, currentUser } = React.useContext(AuthContext);\r\n\r\n  function signOutAndNavigate() {\r\n    signOut().then(() => history.push(\"/\"));\r\n  }\r\n\r\n  return (\r\n    <Box px={[8, 12, 16, 24]} py={6}>\r\n      <Flex\r\n        align={[\"start\", \"start\", \"center\"]}\r\n        justify=\"space-between\"\r\n        direction={[\"column\", \"column\", \"row\"]}\r\n        w=\"100%\"\r\n        maxW={MAX_WIDTH}\r\n        mx=\"auto\"\r\n      >\r\n        <Link to=\"/\">\r\n          <Heading as=\"h1\" size=\"md\" display=\"block\" mb={[4, 4, 0]}>\r\n            RideShare\r\n          </Heading>\r\n        </Link>\r\n\r\n        {currentUser && (\r\n          <Flex\r\n            align=\"center\"\r\n            justify=\"start\"\r\n            direction={[\"column-reverse\", \"column-reverse\", \"row\"]}\r\n          >\r\n            <Button\r\n              as={Link}\r\n              to=\"/ride/new\"\r\n              variant=\"outline\"\r\n              variantColor={COLORS.primary}\r\n              display={[\"none\", \"none\", \"inline-flex\"]}\r\n              mr={2}\r\n            >\r\n              Request Ride\r\n            </Button>\r\n            <Button\r\n              as={Link}\r\n              to=\"/ride/offer\"\r\n              variant=\"outline\"\r\n              variantColor={COLORS.primary}\r\n              display={[\"none\", \"none\", \"inline-flex\"]}\r\n              mr={2}\r\n            >\r\n              Offer Ride\r\n            </Button>\r\n\r\n            <Button\r\n              display={[\"none\", \"none\", \"inline-flex\"]}\r\n              mr={2}\r\n              onClick={signOutAndNavigate}\r\n            >\r\n              Sign Out\r\n            </Button>\r\n          </Flex>\r\n        )}\r\n      </Flex>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default withRouter(Navigation);\r\n","import React from \"react\";\r\nimport Navigation from \"./Navigation\";\r\nimport { Box, Flex } from \"@chakra-ui/core\";\r\nimport { MAX_WIDTH } from \"../utils/constants\";\r\n\r\nfunction Layout({ children }) {\r\n  return (\r\n    <Flex direction=\"column\" minH=\"100vh\" h=\"100%\" overflowX=\"hidden\">\r\n      <Navigation />\r\n      <Box\r\n        flex={1}\r\n        bg=\"gray.100\"\r\n        h=\"100%\"\r\n        borderTopStyle=\"solid\"\r\n        borderTopWidth={1}\r\n        borderTopColor=\"gray.200\"\r\n        px={[8, 12, 16, 24]}\r\n        py={[8, 16]}\r\n      >\r\n        <Box maxW={MAX_WIDTH} w=\"100%\" mx=\"auto\">\r\n          {children}\r\n        </Box>\r\n      </Box>\r\n    </Flex>\r\n  );\r\n}\r\n\r\nexport default Layout;\r\n","import React, { useContext } from \"react\";\r\nimport { AuthContext } from \"../components/Auth\";\r\nimport { Box, Text, Button } from \"@chakra-ui/core\";\r\n\r\nfunction MyRequestCard(props) {\r\n  const { currentUser } = useContext(AuthContext);\r\n\r\n  function toUber(fromStreet, fromCity, fromState, fromZip, toStreet, toCity, toState, toZip) {\r\n    console.log(\"To \", fromStreet, fromCity, fromState, fromZip);\r\n    var test = \"https://www.uber.com/us/en/ride/\";\r\n    var win = window.open(test, '_blank');\r\n    win.focus();\r\n  }\r\n\r\n  function toLyft(pickup, destination) {\r\n    console.log(\"To lyft\");\r\n    var test = \"https://lyft.com/ride?id=lyft&partner=0nxgd3SSPr95&destination=-122.4242038&pickup=-122.422999\"\r\n    var win = window.open(test, '_blank');\r\n    win.focus();\r\n}\r\n \r\n  return (\r\n    <Box\r\n      mb={4}\r\n      w=\"400px\"\r\n      h=\"100%\"\r\n      border=\"2px\"\r\n      borderColor=\"gray.200\"\r\n      borderRadius=\"10\"\r\n    >\r\n      <Box mb={2} ml={2}>\r\n        <Text p={1 / 2} as=\"em\" fontWeight=\"bold\">\r\n          Pickup Location\r\n        </Text>\r\n        <Text p={1 / 2} isTruncated>\r\n          {props.fromStreet}\r\n        </Text>\r\n        <Text p={1 / 2} isTruncated>\r\n          {props.fromCity}, {props.fromState} {props.fromZipCode}\r\n        </Text>\r\n      </Box>\r\n\r\n      <Box mb={2} ml={2}>\r\n        <Text p={1 / 2} as=\"em\" fontWeight=\"bold\">\r\n          Destination\r\n        </Text>\r\n        <br/>\r\n        <Text p={1 / 2} as=\"em\">\r\n          {props.toFacility}\r\n        </Text>\r\n        <Text p={1 / 2} isTruncated>\r\n          {props.toStreet}\r\n        </Text>\r\n        <Text p={1 / 2} isTruncated>\r\n          {props.toCity}, {props.toState} {props.toZipCode}\r\n        </Text>\r\n      </Box>\r\n\r\n      <Text p={1 / 2} as=\"em\" fontWeight=\"bold\">\r\n          Ride Apps\r\n        </Text>\r\n      <Box display=\"flex\" alignItems=\"center\" flex={1} flexDirection='row' justifyContent='space-around'>\r\n        <Box mb={2} ml={2} alignContent='center'>\r\n            {/* <Link to=\"/ride/make-offer\"> */}\r\n            <Button\r\n            flex={1}\r\n            type=\"button\"\r\n            p={1 / 2}\r\n            variantColor=\"green\"\r\n            onClick={() => toUber(props.fromStreet, props.fromCity, props.fromState, props.fromZipCode,\r\n                props.toStreet, props.toCity, props.toState, props.toZipCode)}\r\n            >\r\n            <Text p={1 / 2} m={1}>\r\n                Uber\r\n            </Text>\r\n            </Button>\r\n            {/* </Link> */}\r\n        </Box>\r\n\r\n        <Box mb={2} ml={2} alignContent='center'>\r\n            {/* <Link to=\"/ride/make-offer\"> */}\r\n            <Button\r\n            flex-grow={1}\r\n            type=\"button\"\r\n            p={1 / 2}\r\n            variantColor=\"pink\"\r\n            onClick={() => toLyft(props.requestID, currentUser)}\r\n            >\r\n            <Text p={1 / 2} m={1}>\r\n                Lyft\r\n            </Text>\r\n            </Button>\r\n            {/* </Link> */}\r\n            </Box>\r\n        </Box>\r\n\r\n        <Box mb={2} ml={2}>\r\n        <Text p={1 / 2} as=\"em\" fontWeight=\"bold\">\r\n          Facility Shuttle Number\r\n        </Text>\r\n        <br/>\r\n        <Text p={1 / 2} as=\"em\">\r\n          Unknown Number\r\n        </Text>\r\n      </Box>\r\n\r\n      <Box mb={2} ml={2}>\r\n        <Text p={1 / 2} as=\"em\" fontWeight=\"bold\">\r\n          Local Transportation Services\r\n        </Text>\r\n        <br/>\r\n        <Text p={1 / 2} as=\"em\">\r\n          Unknown Number\r\n        </Text>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default MyRequestCard;\r\n","import React from \"react\";\r\nimport MyRequestCard from \"../components/MyRequestCard\";\r\nimport { Box, Text } from \"@chakra-ui/core\";\r\n\r\nfunction MyRequestedRides({ requestList }) {\r\n    if (requestList.length === 0) {\r\n        return (\r\n            <Box>\r\n                <Text>\r\n                    No Requested Rides\r\n                </Text>\r\n            </Box>\r\n        );\r\n    }\r\n  return (\r\n    <Box>\r\n      <Text>Requests:</Text>\r\n      <Box>\r\n        {requestList.map(request => (\r\n          <MyRequestCard\r\n            fromCity={request.pickupInfo.fromCity}\r\n            fromState={request.pickupInfo.fromState}\r\n            fromZipCode={request.pickupInfo.fromZipCode}\r\n            fromFacility={request.pickupInfo.fromFacility}\r\n            fromStreet={request.pickupInfo.fromStreet}\r\n            toCity={request.dropOffInfo.toCity}\r\n            toState={request.dropOffInfo.toState}\r\n            toZipCode={request.dropOffInfo.toZipCode}\r\n            toFacility={request.dropOffInfo.toFacility}\r\n            toStreet={request.dropOffInfo.toStreet}\r\n            firstName={request.user.firstName}\r\n            lastName={request.user.lastName}\r\n            date={request.date}\r\n            requestID={request.requestID}\r\n            key={request.requestID}\r\n          />\r\n        ))}\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default MyRequestedRides;\r\n","import React, { useContext } from \"react\";\r\nimport { AuthContext } from \"../components/Auth\";\r\nimport firebase from \"firebase/app\";\r\nimport { Box, Text, Button } from \"@chakra-ui/core\";\r\n\r\nfunction RequestCard(props) {\r\n  const { currentUser } = useContext(AuthContext);\r\n\r\n  function addOffer(requestID, currentUser) {\r\n    firebase\r\n      .firestore()\r\n      .collection(\"requests\")\r\n      .doc(requestID)\r\n      .update({\r\n        offers: firebase.firestore.FieldValue.arrayUnion(currentUser.uid)\r\n      })\r\n      .then(function() {\r\n        console.log(\"id added successfully\");\r\n      })\r\n      .catch(function(error) {\r\n        console.log(\"problem\");\r\n      });\r\n  }\r\n\r\n  return (\r\n    <Box\r\n      mb={4}\r\n      w=\"400px\"\r\n      h=\"100%\"\r\n      border=\"2px\"\r\n      borderColor=\"gray.200\"\r\n      borderRadius=\"10\"\r\n    >\r\n      <Box mb={2} ml={2}>\r\n        <Text p={1 / 2} as=\"em\" fontWeight=\"bold\">\r\n          User Info\r\n        </Text>\r\n        <Text p={1 / 2} isTruncated>\r\n          Name: {props.firstName} {props.lastName}\r\n        </Text>\r\n        <Text p={1 / 2} as=\"em\" isTruncated>\r\n          Pickup Location\r\n        </Text>\r\n        <Text p={1 / 2} isTruncated>\r\n          Address: {props.fromStreet}\r\n        </Text>\r\n        <Text p={1 / 2} isTruncated>\r\n          {props.fromCity}, {props.fromState} {props.fromZipCode}\r\n        </Text>\r\n      </Box>\r\n\r\n      <Box mb={2} ml={2}>\r\n        <Text p={1 / 2} as=\"em\" fontWeight=\"bold\">\r\n          Destination\r\n        </Text>\r\n        <Text p={1 / 2} isTruncated>\r\n          {props.toFacility}\r\n        </Text>\r\n        <Text p={1 / 2} isTruncated>\r\n          Address: {props.toStreet}\r\n        </Text>\r\n        <Text p={1 / 2} isTruncated>\r\n          {props.toCity}, {props.toState} {props.toZipCode}\r\n        </Text>\r\n      </Box>\r\n\r\n      <Box mb={2} ml={2}>\r\n        {/* <Link to=\"/ride/make-offer\"> */}\r\n        <Button\r\n          type=\"submit\"\r\n          p={1 / 2}\r\n          variantColor=\"blue\"\r\n          onClick={() => addOffer(props.requestID, currentUser)}\r\n        >\r\n          <Text p={1 / 2} m={1}>\r\n            Offer Ride\r\n          </Text>\r\n        </Button>\r\n        {/* </Link> */}\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default RequestCard;\r\n","import React from \"react\";\r\nimport RequestCard from \"../components/RequestCard\";\r\nimport { Box, Text } from \"@chakra-ui/core\";\r\n\r\nfunction MyOfferedRides({ offeredList }) {\r\n    if (offeredList.length === 0) {\r\n        return (\r\n            <Box>\r\n                <Text>\r\n                    No Offered Rides\r\n                </Text>\r\n            </Box>\r\n        );\r\n    }\r\n    return (\r\n        <Box>\r\n            <Text>Requests:</Text>\r\n            <Box>\r\n                {offeredList.map(request => (\r\n                    <RequestCard\r\n                    fromCity={request.pickupInfo.fromCity}\r\n                    fromState={request.pickupInfo.fromState}\r\n                    fromZipCode={request.pickupInfo.fromZipCode}\r\n                    fromFacility={request.pickupInfo.fromFacility}\r\n                    fromStreet={request.pickupInfo.fromStreet}\r\n                    toCity={request.dropOffInfo.toCity}\r\n                    toState={request.dropOffInfo.toState}\r\n                    toZipCode={request.dropOffInfo.toZipCode}\r\n                    toFacility={request.dropOffInfo.toFacility}\r\n                    toStreet={request.dropOffInfo.toStreet}\r\n                    firstName={request.user.firstName}\r\n                    lastName={request.user.lastName}\r\n                    date={request.date}\r\n                    requestID={request.requestID}\r\n                    key={request.requestID}\r\n                    />\r\n                ))}\r\n            </Box>\r\n        </Box>\r\n  );\r\n}\r\n\r\nexport default MyOfferedRides;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { AuthContext } from \"../components/Auth\";\r\nimport Layout from \"../components/Layout\";\r\nimport { Box } from \"@chakra-ui/core\";\r\nimport MyRequestedRides from \"../components/MyRequestedRides\";\r\nimport MyOfferedRides from \"../components/MyOfferedRides\";\r\nimport firebase from \"firebase/app\";\r\n\r\nfunction Home() {\r\n  const { currentUser } = React.useContext(AuthContext);\r\n  const [myRequestList, setMyRequestList] = useState([]);\r\n  const [myOfferedList, setMyOfferedList] = useState([]);\r\n\r\n  useEffect(() => {\r\n    firebase\r\n      .firestore()\r\n      .collection(\"requests\")\r\n      .where(\"userId\", \"==\", currentUser.uid)\r\n      .get()\r\n      .then(response => {\r\n        const tempRequestList = [];\r\n        const userIds = [];\r\n\r\n        response.forEach(function(doc, i) {\r\n          const {\r\n            date,\r\n            fromCity,\r\n            fromState,\r\n            fromStreet,\r\n            fromZipCode,\r\n            toCity,\r\n            toState,\r\n            toZipCode,\r\n            toFacility,\r\n            toStreet,\r\n            userId\r\n          } = doc.data();\r\n\r\n          tempRequestList.push({\r\n            pickupInfo: {\r\n              fromCity: fromCity,\r\n              fromState: fromState,\r\n              fromStreet: fromStreet,\r\n              fromZipCode: fromZipCode\r\n            },\r\n            dropOffInfo: {\r\n              toCity: toCity,\r\n              toState: toState,\r\n              toZipCode: toZipCode,\r\n              toFacility: toFacility,\r\n              toStreet: toStreet\r\n            },\r\n            date: date,\r\n            requestingUser: userId,\r\n            requestID: doc.id\r\n          });\r\n          userIds.push(userId);\r\n        });\r\n\r\n        if (userIds.length) {\r\n          fetchUsers(userIds).then(userArray => {\r\n            tempRequestList.map(tempRequest => {\r\n              tempRequest.user = userArray.find(\r\n                user => user.id === tempRequest.requestingUser\r\n              );\r\n              return tempRequest;\r\n            });\r\n            setMyRequestList(tempRequestList);\r\n          });\r\n        }\r\n      });\r\n  });\r\n\r\n  function fetchUsers(userIds) {\r\n    return firebase\r\n      .firestore()\r\n      .collection(\"users\")\r\n      .where(\"id\", \"in\", userIds)\r\n      .get()\r\n      .then(response => {\r\n        const userArray = [];\r\n\r\n        response.forEach(s => {\r\n          userArray.push(s.data());\r\n        });\r\n        return userArray;\r\n      });\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      <Box display=\"flex\" alignItems=\"flex-start\" justifyItems=\"space-between\">\r\n        <Box p={10}>\r\n          <MyRequestedRides requestList={myRequestList} />\r\n        </Box>\r\n        <Box p={10}>\r\n          <MyOfferedRides offeredList={myOfferedList} />\r\n        </Box>\r\n      </Box>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React, { useState, useCallback } from \"react\";\r\nimport { Link as RRLink } from \"react-router-dom\";\r\nimport firebase from \"firebase/app\";\r\nimport {\r\n  FormControl,\r\n  FormLabel,\r\n  Input,\r\n  Button,\r\n  Checkbox,\r\n  Box,\r\n  Link,\r\n  Heading\r\n} from \"@chakra-ui/core\";\r\nimport Layout from \"../components/Layout\";\r\n\r\nfunction SignUp({ history }) {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [firstName, setFirstName] = useState(\"\");\r\n  const [lastName, setLastName] = useState(\"\");\r\n  const [phoneNumber, setPhoneNumber] = useState(\"\");\r\n  const [isDriver, setIsDriver] = useState(false);\r\n  const [licenseNumber, setLicenseNumber] = useState(\"\");\r\n  const [licensePlate, setLicensePlate] = useState(\"\");\r\n  const [make, setMake] = useState(\"\");\r\n  const [model, setModel] = useState(\"\");\r\n  const [handicapAccessible, setHandicapAccessible] = useState(false);\r\n\r\n  const handleSignUp = useCallback(\r\n    async event => {\r\n      event.preventDefault();\r\n      const { email, password } = event.target.elements;\r\n      try {\r\n        await firebase\r\n          .auth()\r\n          .createUserWithEmailAndPassword(email.value, password.value)\r\n          .then(() => {\r\n            firebase.auth().onAuthStateChanged(newUser => {\r\n              if (newUser) {\r\n                firebase\r\n                  .firestore()\r\n                  .collection(\"users\")\r\n                  .doc(newUser.uid)\r\n                  .set({\r\n                    id: newUser.uid,\r\n                    firstName: firstName,\r\n                    lastName: lastName,\r\n                    phoneNumber: phoneNumber,\r\n                    driverVerified: false,\r\n                    licenseNumber: licenseNumber,\r\n                    licensePlate: licensePlate,\r\n                    make: make,\r\n                    model: model,\r\n                    handicapAccessible: handicapAccessible\r\n                  });\r\n              }\r\n            });\r\n          });\r\n        history.push(\"/\");\r\n      } catch (error) {\r\n        alert(error.message);\r\n      }\r\n    },\r\n    [\r\n      history,\r\n      firstName,\r\n      lastName,\r\n      phoneNumber,\r\n      licenseNumber,\r\n      licensePlate,\r\n      make,\r\n      model,\r\n      handicapAccessible\r\n    ]\r\n  );\r\n\r\n  return (\r\n    <Layout>\r\n      <Heading as=\"h1\" size=\"xl\" mb={4}>\r\n        Sign Up\r\n      </Heading>\r\n      <Box as=\"form\" onSubmit={handleSignUp}>\r\n        <FormControl isRequired>\r\n          <FormLabel htmlFor=\"email\" fontSize=\"lg\" fontWeight=\"bold\">\r\n            Email\r\n          </FormLabel>\r\n          <Input\r\n            id=\"email\"\r\n            type=\"email\"\r\n            value={email}\r\n            placeholder=\"example@email.com\"\r\n            onChange={e => {\r\n              setEmail(e.target.value);\r\n            }}\r\n          />\r\n\r\n          <FormLabel htmlFor=\"password\" fontSize=\"lg\" fontWeight=\"bold\">\r\n            Password\r\n          </FormLabel>\r\n          <Input\r\n            id=\"password\"\r\n            type=\"password\"\r\n            value={password}\r\n            placeholder=\"password\"\r\n            onChange={e => {\r\n              setPassword(e.target.value);\r\n            }}\r\n          />\r\n\r\n          <FormLabel htmlFor=\"firstName\" fontSize=\"lg\" fontWeight=\"bold\">\r\n            First Name\r\n          </FormLabel>\r\n          <Input\r\n            id=\"firstName\"\r\n            value={firstName}\r\n            placeholder=\"John\"\r\n            onChange={e => {\r\n              setFirstName(e.target.value);\r\n            }}\r\n          />\r\n\r\n          <FormLabel htmlFor=\"lastName\" fontSize=\"lg\" fontWeight=\"bold\">\r\n            Last Name\r\n          </FormLabel>\r\n          <Input\r\n            id=\"lastName\"\r\n            value={lastName}\r\n            placeholder=\"Doe\"\r\n            onChange={e => {\r\n              setLastName(e.target.value);\r\n            }}\r\n          />\r\n\r\n          <FormLabel htmlFor=\"phoneNumber\" fontSize=\"lg\" fontWeight=\"bold\">\r\n            Phone Number\r\n          </FormLabel>\r\n          <Input\r\n            id=\"phoneNumber\"\r\n            type=\"phone\"\r\n            value={phoneNumber}\r\n            placeholder=\"(XXX)-XXX-XXXX\"\r\n            onChange={e => {\r\n              setPhoneNumber(e.target.value);\r\n            }}\r\n          />\r\n\r\n          <Checkbox\r\n            value={isDriver}\r\n            onChange={() => {\r\n              setIsDriver(!isDriver);\r\n            }}\r\n          >\r\n            Would you like to offer rides to other users?\r\n          </Checkbox>\r\n\r\n          {isDriver ? (\r\n            <Box>\r\n              <FormLabel\r\n                htmlFor=\"licenseNumber\"\r\n                fontSize=\"lg\"\r\n                fontWeight=\"bold\"\r\n              >\r\n                Driver's License Number\r\n              </FormLabel>\r\n              <Input\r\n                id=\"licenseNumber\"\r\n                type=\"text\"\r\n                value={licenseNumber}\r\n                placeholder=\"XXXXXXXXX\"\r\n                onChange={e => {\r\n                  setLicenseNumber(e.target.value);\r\n                }}\r\n              />\r\n\r\n              <FormLabel htmlFor=\"licensePlate\" fontSize=\"lg\" fontWeight=\"bold\">\r\n                License Plate Number\r\n              </FormLabel>\r\n              <Input\r\n                id=\"licensePlate\"\r\n                type=\"text\"\r\n                value={licensePlate}\r\n                placeholder=\"XXXXXXXXX\"\r\n                onChange={e => {\r\n                  setLicensePlate(e.target.value);\r\n                }}\r\n              />\r\n\r\n              <FormLabel htmlFor=\"make\" fontSize=\"lg\" fontWeight=\"bold\">\r\n                Make\r\n              </FormLabel>\r\n              <Input\r\n                id=\"make\"\r\n                type=\"text\"\r\n                value={make}\r\n                placeholder=\"XXXXXXXXX\"\r\n                onChange={e => {\r\n                  setMake(e.target.value);\r\n                }}\r\n              />\r\n\r\n              <FormLabel htmlFor=\"model\" fontSize=\"lg\" fontWeight=\"bold\">\r\n                Model\r\n              </FormLabel>\r\n              <Input\r\n                id=\"model\"\r\n                type=\"text\"\r\n                value={model}\r\n                placeholder=\"XXXXXXXXX\"\r\n                onChange={e => {\r\n                  setModel(e.target.value);\r\n                }}\r\n              />\r\n\r\n              <Checkbox\r\n                value={handicapAccessible}\r\n                onChange={() => {\r\n                  setHandicapAccessible(!handicapAccessible);\r\n                }}\r\n              >\r\n                Check this box if the vehicle is handicap accessible.\r\n              </Checkbox>\r\n            </Box>\r\n          ) : (\r\n            <> </>\r\n          )}\r\n          <Box>\r\n            <Button mt={4} variantColor=\"blue\" type=\"submit\">\r\n              Create an account\r\n            </Button>\r\n          </Box>\r\n        </FormControl>\r\n      </Box>\r\n\r\n      <Link as={RRLink} to=\"/login\" d=\"block\" mt={4}>\r\n        Already have an account? Login.\r\n      </Link>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default SignUp;\r\n","import React, { useCallback, useContext } from \"react\";\r\nimport { Redirect } from \"react-router\";\r\nimport { Link as RRLink } from \"react-router-dom\";\r\nimport firebase from \"firebase/app\";\r\nimport { AuthContext } from \"../components/Auth\";\r\nimport {\r\n  Button,\r\n  Box,\r\n  FormControl,\r\n  FormLabel,\r\n  Input,\r\n  Link,\r\n  Heading\r\n} from \"@chakra-ui/core\";\r\nimport Layout from \"../components/Layout\";\r\n\r\nfunction Login({ history }) {\r\n  const handleLogin = useCallback(\r\n    async event => {\r\n      event.preventDefault();\r\n      const { email, password } = event.target.elements;\r\n      try {\r\n        await firebase\r\n          .auth()\r\n          .signInWithEmailAndPassword(email.value, password.value);\r\n\r\n        history.push(\"/\");\r\n      } catch (error) {\r\n        alert(error);\r\n      }\r\n    },\r\n    [history]\r\n  );\r\n\r\n  const { currentUser } = useContext(AuthContext);\r\n\r\n  if (currentUser) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      <Heading as=\"h1\" size=\"xl\" mb={4}>\r\n        Login\r\n      </Heading>\r\n      <Box>\r\n        <form onSubmit={handleLogin}>\r\n          <FormControl>\r\n            <FormLabel htmlFor=\"email\">Email</FormLabel>\r\n            <Input id=\"email\" name=\"email\" type=\"email\" placeholder=\"Email\" />\r\n\r\n            <FormLabel htmlFor=\"password\">Password</FormLabel>\r\n            <Input\r\n              id=\"password\"\r\n              name=\"password\"\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n            />\r\n          </FormControl>\r\n          <Box>\r\n            <Button mt={4} variantColor=\"blue\" type=\"submit\">\r\n              Submit\r\n            </Button>\r\n          </Box>\r\n        </form>\r\n      </Box>\r\n\r\n      <Link as={RRLink} to=\"/signup\" d=\"block\" mt={4}>\r\n        Don't have an account? Sign up now.\r\n      </Link>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\nimport { getIn } from \"formik\";\r\nimport {\r\n  FormControl,\r\n  FormLabel,\r\n  FormErrorMessage,\r\n  Input\r\n} from \"@chakra-ui/core\";\r\n\r\nfunction TextFormField({ field, form, label, isRequired, ...props }) {\r\n  const errorText =\r\n    getIn(form.touched, field.name) && getIn(form.errors, field.name);\r\n\r\n  return (\r\n    <FormControl isrequired={isRequired} isInvalid={!!errorText} my={4}>\r\n      <FormLabel htmlFor={field.name}>{label}</FormLabel>\r\n      <Input id={field.name} {...field} {...props} />\r\n      <FormErrorMessage>{errorText}</FormErrorMessage>\r\n    </FormControl>\r\n  );\r\n}\r\n\r\nexport default TextFormField;\r\n","import React from \"react\";\r\nimport { getIn } from \"formik\";\r\nimport {\r\n  FormControl,\r\n  FormLabel,\r\n  FormErrorMessage,\r\n  Textarea\r\n} from \"@chakra-ui/core\";\r\n\r\nfunction TextAreaFormField({ field, form, label, isRequired, ...props }) {\r\n  const errorText =\r\n    getIn(form.touched, field.name) && getIn(form.errors, field.name);\r\n\r\n  return (\r\n    <FormControl isrequired={isRequired} isInvalid={!!errorText} my={4}>\r\n      <FormLabel htmlFor={field.name}>{label}</FormLabel>\r\n      <Textarea id={field.name} {...field} {...props} />\r\n      <FormErrorMessage>{errorText}</FormErrorMessage>\r\n    </FormControl>\r\n  );\r\n}\r\n\r\nexport default TextAreaFormField;\r\n","import React from \"react\";\r\nimport * as yup from \"yup\";\r\nimport { Formik, Field, Form } from \"formik\";\r\nimport { Flex, Box, Button, Text } from \"@chakra-ui/core\";\r\nimport TextFormField from \"./TextFormField\";\r\nimport TextAreaFormField from \"./TextAreaFormField\";\r\n\r\nconst schema = yup.object({\r\n  date: yup\r\n    .string()\r\n    .required()\r\n    .min(3),\r\n  notes: yup.string(),\r\n  fromStreet: yup.string().required(),\r\n  fromCity: yup.string().required(),\r\n  fromState: yup\r\n    .string()\r\n    .required()\r\n    .length(2),\r\n  fromZipCode: yup.string().required(),\r\n  toFacility: yup.string(),\r\n  toStreet: yup.string().required(),\r\n  toCity: yup.string().required(),\r\n  toState: yup\r\n    .string()\r\n    .required()\r\n    .length(2),\r\n  toZipCode: yup.string().required()\r\n});\r\n\r\nfunction NewRide({ onCreateRide }) {\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        fromStreet: \"\",\r\n        fromCity: \"\",\r\n        fromState: \"\",\r\n        fromZipCode: \"\",\r\n        toFacility: \"\",\r\n        toStreet: \"\",\r\n        toCity: \"\",\r\n        toState: \"\",\r\n        toZipCode: \"\",\r\n        date: \"\",\r\n        notes: \"\"\r\n      }}\r\n      validationSchema={schema}\r\n      onSubmit={(values, { setSubmitting }) => {\r\n        onCreateRide(values);\r\n      }}\r\n    >\r\n      {() => (\r\n        <Box as={Form}>\r\n          <Box as=\"fieldset\" mt={4} mb={10} borderBottomWidth=\"1px\">\r\n            <Text as=\"legend\" fontSize=\"lg\" fontWeight=\"bold\">\r\n              Pick up\r\n            </Text>\r\n            <Field\r\n              name=\"fromStreet\"\r\n              label=\"Street\"\r\n              isRequired\r\n              component={TextFormField}\r\n            />\r\n            <Flex justify=\"space-between\" mt={-4}>\r\n              <Field\r\n                name=\"fromCity\"\r\n                label=\"City\"\r\n                isRequired\r\n                component={TextFormField}\r\n              />\r\n              <Field\r\n                name=\"fromState\"\r\n                label=\"State\"\r\n                isRequired\r\n                component={TextFormField}\r\n              />\r\n              <Field\r\n                name=\"fromZipCode\"\r\n                label=\"Zip code\"\r\n                isRequired\r\n                component={TextFormField}\r\n              />\r\n            </Flex>\r\n          </Box>\r\n\r\n          <Box as=\"fieldset\" mt={4} mb={10} borderBottomWidth=\"1px\">\r\n            <Text as=\"legend\" fontSize=\"lg\" fontWeight=\"bold\">\r\n              Destination\r\n            </Text>\r\n            <Field\r\n              name=\"toFacility\"\r\n              label=\"Facility\"\r\n              isRequired\r\n              component={TextFormField}\r\n            />\r\n            <Field\r\n              name=\"toStreet\"\r\n              label=\"Street\"\r\n              isRequired\r\n              component={TextFormField}\r\n            />\r\n            <Flex justify=\"space-between\" mt={-4}>\r\n              <Field\r\n                name=\"toCity\"\r\n                label=\"City\"\r\n                isRequired\r\n                component={TextFormField}\r\n              />\r\n              <Field\r\n                name=\"toState\"\r\n                label=\"State\"\r\n                isRequired\r\n                component={TextFormField}\r\n              />\r\n              <Field\r\n                name=\"toZipCode\"\r\n                label=\"Zip code\"\r\n                isRequired\r\n                component={TextFormField}\r\n              />\r\n            </Flex>\r\n          </Box>\r\n\r\n          <Field\r\n            name=\"date\"\r\n            label=\"Date\"\r\n            isRequired\r\n            component={TextFormField}\r\n          />\r\n\r\n          <Field name=\"notes\" label=\"Notes\" component={TextAreaFormField} />\r\n\r\n          <Button mt={4} type=\"submit\" variantColor=\"blue\">\r\n            Create a Ride\r\n          </Button>\r\n        </Box>\r\n      )}\r\n    </Formik>\r\n  );\r\n}\r\n\r\nexport default NewRide;\r\n","import React from \"react\";\r\nimport firebase from \"firebase/app\";\r\nimport { AuthContext } from \"../components/Auth\";\r\nimport Layout from \"../components/Layout\";\r\nimport NewRideForm from \"../components/NewRideForm\";\r\n\r\nfunction NewRide({ history }) {\r\n  const { currentUser } = React.useContext(AuthContext);\r\n\r\n  function onCreateRide(values) {\r\n    firebase\r\n      .firestore()\r\n      .collection(\"requests\")\r\n      .add({\r\n        ...values,\r\n        date: new Date(),\r\n        userId: currentUser.uid\r\n      })\r\n      .then(() => {\r\n        history.push(\"/\");\r\n      });\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      <NewRideForm onCreateRide={onCreateRide} />\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default NewRide;\r\n","import React from \"react\";\r\nimport * as yup from \"yup\";\r\nimport { Formik, Field, Form } from \"formik\";\r\nimport { Flex, Box, Button, Text } from \"@chakra-ui/core\";\r\nimport TextFormField from \"./TextFormField\";\r\n\r\nconst schema = yup.object({\r\n  fromCity: yup.string().required(),\r\n  fromState: yup.string().required(),\r\n  toCity: yup.string().required(),\r\n  toState: yup\r\n    .string()\r\n    .required()\r\n    .length(2),\r\n  date: yup\r\n    .string()\r\n    .required()\r\n    .min(3)\r\n});\r\n\r\nfunction OfferRide({ onOfferRide }) {\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        fromCity: \"\",\r\n        fromState: \"\",\r\n        toCity: \"\",\r\n        toState: \"\",\r\n        date: \"\"\r\n      }}\r\n      validationSchema={schema}\r\n      onSubmit={(values, { setSubmitting }) => {\r\n        onOfferRide(values);\r\n      }}\r\n    >\r\n      {() => (\r\n        <Box as={Form}>\r\n          <Box as=\"fieldset\" mt={4} mb={10} borderBottomWidth=\"1px\">\r\n            <Text as=\"legend\" fontSize=\"lg\" fontWeight=\"bold\">\r\n              Start Location\r\n            </Text>\r\n            <Flex justify=\"space-between\" mt={-4}>\r\n              <Field\r\n                name=\"fromCity\"\r\n                label=\"City\"\r\n                isRequired\r\n                component={TextFormField}\r\n              />\r\n              <Field\r\n                name=\"fromState\"\r\n                label=\"State\"\r\n                isRequired\r\n                component={TextFormField}\r\n              />\r\n            </Flex>\r\n          </Box>\r\n\r\n          <Box as=\"fieldset\" mt={4} mb={10} borderBottomWidth=\"1px\">\r\n            <Text as=\"legend\" fontSize=\"lg\" fontWeight=\"bold\">\r\n              Destination\r\n            </Text>\r\n            <Flex justify=\"space-between\" mt={-4}>\r\n              <Field\r\n                name=\"toCity\"\r\n                label=\"City\"\r\n                isRequired\r\n                component={TextFormField}\r\n              />\r\n              <Field\r\n                name=\"toState\"\r\n                label=\"State\"\r\n                isRequired\r\n                component={TextFormField}\r\n              />\r\n            </Flex>\r\n          </Box>\r\n\r\n          <Field\r\n            name=\"date\"\r\n            label=\"Date\"\r\n            isRequired\r\n            component={TextFormField}\r\n          />\r\n\r\n          <Button mt={4} type=\"submit\" variantColor=\"blue\">\r\n            Find Ride Requests\r\n          </Button>\r\n        </Box>\r\n      )}\r\n    </Formik>\r\n  );\r\n}\r\n\r\nexport default OfferRide;\r\n","import React from \"react\";\r\nimport RequestCard from \"../components/RequestCard\";\r\nimport { Box, Text } from \"@chakra-ui/core\";\r\n\r\nfunction RideRequestList({ requestList }) {\r\n  return (\r\n    <Box>\r\n      <Text>Requests Found:</Text>\r\n      <Box>\r\n        {requestList.map(request => (\r\n          <RequestCard\r\n            fromCity={request.pickupInfo.fromCity}\r\n            fromState={request.pickupInfo.fromState}\r\n            fromZipCode={request.pickupInfo.fromZipCode}\r\n            fromFacility={request.pickupInfo.fromFacility}\r\n            fromStreet={request.pickupInfo.fromStreet}\r\n            toCity={request.dropOffInfo.toCity}\r\n            toState={request.dropOffInfo.toState}\r\n            toZipCode={request.dropOffInfo.toZipCode}\r\n            toFacility={request.dropOffInfo.toFacility}\r\n            toStreet={request.dropOffInfo.toStreet}\r\n            firstName={request.user.firstName}\r\n            lastName={request.user.lastName}\r\n            date={request.date}\r\n            requestID={request.requestID}\r\n            key={request.requestID}\r\n          />\r\n        ))}\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default RideRequestList;\r\n","import React, { useState } from \"react\";\r\nimport firebase from \"firebase/app\";\r\nimport Layout from \"../components/Layout\";\r\nimport { Box } from \"@chakra-ui/core\";\r\nimport OfferRideForm from \"../components/OfferRideForm\";\r\nimport RideRequestList from \"../components/RideRequestList\";\r\n\r\nfunction OfferRide() {\r\n  const [requestList, setRequestList] = useState([]);\r\n\r\n  function onOfferRide(values) {\r\n    firebase\r\n      .firestore()\r\n      .collection(\"requests\")\r\n      .where(\"toCity\", \"==\", values.toCity)\r\n      .get()\r\n      .then(function(querySnapshot) {\r\n        const tempRequestList = [];\r\n        const userIds = [];\r\n        querySnapshot.forEach(function(doc, i) {\r\n          const {\r\n            date,\r\n            fromCity,\r\n            fromState,\r\n            fromStreet,\r\n            fromZipCode,\r\n            toCity,\r\n            toState,\r\n            toZipCode,\r\n            toFacility,\r\n            toStreet,\r\n            userId\r\n          } = doc.data();\r\n\r\n          tempRequestList.push({\r\n            pickupInfo: {\r\n              fromCity: fromCity,\r\n              fromState: fromState,\r\n              fromStreet: fromStreet,\r\n              fromZipCode: fromZipCode\r\n            },\r\n            dropOffInfo: {\r\n              toCity: toCity,\r\n              toState: toState,\r\n              toZipCode: toZipCode,\r\n              toFacility: toFacility,\r\n              toStreet: toStreet\r\n            },\r\n            date: date,\r\n            requestingUser: userId,\r\n            requestID: doc.id\r\n          });\r\n          userIds.push(userId);\r\n        });\r\n\r\n        fetchUsers(userIds).then(userArray => {\r\n          tempRequestList.map(tempRequest => {\r\n            tempRequest.user = userArray.find(\r\n              user => user.id === tempRequest.requestingUser\r\n            );\r\n            return tempRequest;\r\n          });\r\n          setRequestList(tempRequestList);\r\n        });\r\n      });\r\n  }\r\n\r\n  function fetchUsers(userIds) {\r\n    return firebase\r\n      .firestore()\r\n      .collection(\"users\")\r\n      .where(\"id\", \"in\", userIds)\r\n      .get()\r\n      .then(response => {\r\n        const userArray = [];\r\n\r\n        response.forEach(s => {\r\n          userArray.push(s.data());\r\n        });\r\n        return userArray;\r\n      });\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      <Box display=\"flex\" alignItems=\"flex-start\" justifyItems=\"space-between\">\r\n        <Box p={10}>\r\n          <OfferRideForm onOfferRide={onOfferRide} />\r\n        </Box>\r\n        <Box p={10}>\r\n          <RideRequestList requestList={requestList} />\r\n        </Box>\r\n      </Box>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default OfferRide;\r\n","import React from \"react\";\r\nimport { theme, ThemeProvider, CSSReset } from \"@chakra-ui/core\";\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport { AuthProvider } from \"./components/Auth\";\r\nimport PrivateRoute from \"./components/PrivateRoute\";\r\nimport Home from \"./pages/Home\";\r\nimport Signup from \"./pages/Signup\";\r\nimport Login from \"./pages/Login\";\r\nimport NewRide from \"./pages/NewRide\";\r\nimport OfferRide from \"./pages/OfferRide\";\r\n\r\nfunction App() {\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <CSSReset />\r\n      <AuthProvider>\r\n        <Router basename={process.env.PUBLIC_URL}>\r\n          <>\r\n            <Route exact path=\"/\" component={Home} />\r\n            <PrivateRoute exact path=\"/ride/new\" component={NewRide} />\r\n            <PrivateRoute exact path=\"/ride/offer\" component={OfferRide} />\r\n            <Route exact path=\"/signup\" component={Signup} />\r\n            <Route exact path=\"/login\" component={Login} />\r\n          </>\r\n        </Router>\r\n      </AuthProvider>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            \"This web app is being served cache-first by a service \" +\r\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                \"New content is available and will be used when all \" +\r\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get(\"content-type\");\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./firebase\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}